<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MilitaryDoctor&#39;s Lab</title>
  <subtitle>Keep going</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-30T11:02:13.917Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Junyi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Visual Studio 2015 使用 libcurl</title>
    <link href="http://yoursite.com/2016/07/30/Visual-Studio-2015-%E4%BD%BF%E7%94%A8-libcurl/"/>
    <id>http://yoursite.com/2016/07/30/Visual-Studio-2015-使用-libcurl/</id>
    <published>2016-07-30T11:01:37.000Z</published>
    <updated>2016-07-30T11:02:13.917Z</updated>
    
    <content type="html"><![CDATA[<p>#<strong>Step 1: 构建libcurl静态库</strong><br>    libcurl目前最新版：7.46.0<br>    请按照自己的需要适当更改文中出现的路径</p>
<ol>
<li>下载最新版<strong><a href="http://curl.haxx.se/latest.cgi?curl=tar.gz" target="_blank" rel="external">libcurl</a></strong></li>
<li>解压（我把它解压到了<code>C:\libcurl</code>）</li>
<li>以管理员权限打开<code>CMD</code></li>
<li>键入命令<code>X:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\vcvars32.bat</code>（X是VS的安装盘符）</li>
<li>键入命令以切换到libcurl目录<code>cd C:\libcurl\winbuild</code></li>
<li><code>nmake /f Makefile.vc mode=static VC=14</code></li>
<li>构建完成后的静态库应该在<code>C:\libcurl\builds\libcurl-vc14-x86-release-static-ipv6-sspi-winssl</code>里，如图：<br><img src="http://img.blog.csdn.net/20160116130527619" alt="这里写图片描述"></li>
</ol>
<hr>
<p>#<strong>Step 2: 针对libcurl进行链接</strong></p>
<ol>
<li>打开项目属性：菜单 -&gt; 项目(P) -&gt; 属性(P)</li>
<li>配置属性 -&gt; C/C++ -&gt; 常规 -&gt; 附加包含目录<br> 添加：<code>C:\libcurl\builds\libcurl-vc14-x86-release-static-ipv6-sspi-winssl\include</code><br> 如图：<br> <img src="http://img.blog.csdn.net/20160116131143142" alt="这里写图片描述"></li>
<li>配置属性 -&gt; C/C++ -&gt; 预处理器 -&gt; 预处理器定义<br> 加入 <code>CURL_STATICLIB</code><br> 如图：<br> <img src="http://img.blog.csdn.net/20160116131409606" alt="这里写图片描述"></li>
<li>配置属性 -&gt; 链接器 -&gt; 常规 -&gt; 附加库目录<br> 添加：<code>C:\libcurl\builds\libcurl-vc14-x86-release-static-ipv6-sspi-winssl\lib</code><br> 如图：<br> <img src="http://img.blog.csdn.net/20160116131625936" alt="这里写图片描述"></li>
<li>配置属性 -&gt; 链接器 -&gt; 输入 -&gt; 附加依赖项<br> 添加：<code>libcurl_a.lib</code><br> 如图：<br> <img src="http://img.blog.csdn.net/20160116131813576" alt="这里写图片描述"></li>
</ol>
<hr>
<p>#<strong>Step 3: 上代码！</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#include &quot;stdafx.h&quot;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;curl/curl.h&gt;</div><div class="line"></div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	CURL *curl;</div><div class="line">	CURLcode res;</div><div class="line"></div><div class="line">	curl = curl_easy_init();</div><div class="line">	if (curl) &#123;</div><div class="line">		curl_easy_setopt(curl, CURLOPT_URL, &quot;http://example.com&quot;);</div><div class="line">		/* example.com is redirected, so we tell libcurl to follow redirection */</div><div class="line">		curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);</div><div class="line"></div><div class="line">		/* Perform the request, res will get the return code */</div><div class="line">		res = curl_easy_perform(curl);</div><div class="line">		/* Check for errors */</div><div class="line">		if (res != CURLE_OK)</div><div class="line">			fprintf(stderr, &quot;curl_easy_perform() failed: %s\n&quot;,</div><div class="line">				curl_easy_strerror(res));</div><div class="line"></div><div class="line">		/* always cleanup */</div><div class="line">		curl_easy_cleanup(curl);</div><div class="line">	&#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20160116134311399" alt="这里写图片描述"><br>（如果图片看不清，请<code>右键 - &gt;新标签页中打开图片</code>）<br>运行结果：<br><img src="http://img.blog.csdn.net/20160116133535292" alt="这里写图片描述"></p>
<hr>
<p>###<strong>最后说两句</strong><br>本文参考自<a href="http://stackoverflow.com/questions/20171165/getting-libcurl-to-work-with-visual-studio-2013" target="_blank" rel="external">Stack overflow</a></p>
<p><code>..\libcurl\docs\examples</code>里面有好多例子可以参考。</p>
<p>有啥问题可以在评论区留言（我估计这篇文章没人会看。。。。）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#&lt;strong&gt;Step 1: 构建libcurl静态库&lt;/strong&gt;&lt;br&gt;    libcurl目前最新版：7.46.0&lt;br&gt;    请按照自己的需要适当更改文中出现的路径&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载最新版&lt;strong&gt;&lt;a href=&quot;http://cu
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="libcurl" scheme="http://yoursite.com/tags/libcurl/"/>
    
  </entry>
  
  <entry>
    <title>如何获取Unix时间戳[C++]</title>
    <link href="http://yoursite.com/2016/07/30/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96Unix%E6%97%B6%E9%97%B4%E6%88%B3-C/"/>
    <id>http://yoursite.com/2016/07/30/如何获取Unix时间戳-C/</id>
    <published>2016-07-30T11:00:24.000Z</published>
    <updated>2016-07-30T11:02:22.429Z</updated>
    
    <content type="html"><![CDATA[<p>##<strong>什么是Unix时间戳</strong>？</p>
<blockquote>
<p>Unix时间戳(Unix timestamp)，或称Unix时间(Unix time)、POSIX时间(POSIX time)，是一种时间表示方式，定义为从<strong>格林威治时间1970年01月01日00时00分00秒</strong>起至现在的总秒数。Unix时间戳不仅被使用在Unix系统、类Unix系统中，也在许多其他操作系统中被广泛采用</p>
</blockquote>
<p>##<strong>2038年1月19日会发生什么</strong>？</p>
<blockquote>
<p>在2038年1月19日，由于32位整形溢出，Unix时间戳会停止工作。在这个大灾难前，数百万计的应用程序采取新的约定时间的方式，要么升级到64位版本。</p>
</blockquote>
<p>##<strong>代码示例</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//Code::Blocks 编译通过；需开启 &quot;-std=c++11&quot; 编译开关</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    std::time_t result = std::time(nullptr);</div><div class="line">    std::cout &lt;&lt; std::asctime(std::localtime(&amp;result))</div><div class="line">              &lt;&lt; result &lt;&lt; &quot; seconds since the Epoch\n&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###运行结果：</p>
<blockquote>
<p>Sun Nov 22 11:48:58 2015<br>1448164138 seconds since the Epoch</p>
</blockquote>
<p>之所以开启”-std=c++11”编译开关的原因是因为nullptr是<strong>C++11</strong>语言标准用来表示空指针的常量值。</p>
<p>不使用C++11标准的话，你还可以这样写：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//Code::Blocks编译通过</div><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;ctime&gt;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    std::time_t t = std::time(0);  // t is an integer type</div><div class="line">    std::cout &lt;&lt; t &lt;&lt; &quot; seconds since 01-Jan-1970\n&quot;;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码引用自 <a href="http://stackoverflow.com/questions/6012663/get-unix-timestamp-with-c" target="_blank" rel="external">Get Unix timestamp with C++</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##&lt;strong&gt;什么是Unix时间戳&lt;/strong&gt;？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unix时间戳(Unix timestamp)，或称Unix时间(Unix time)、POSIX时间(POSIX time)，是一种时间表示方式，定义为从&lt;strong&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>My Hello World!</title>
    <link href="http://yoursite.com/2016/07/30/My-Hello-World/"/>
    <id>http://yoursite.com/2016/07/30/My-Hello-World/</id>
    <published>2016-07-30T08:16:05.000Z</published>
    <updated>2016-07-30T10:56:06.353Z</updated>
    
    <content type="html"><![CDATA[<p>###Hi Human<br>I am a robot. </p>
<p>233不开玩笑了 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###Hi Human&lt;br&gt;I am a robot. &lt;/p&gt;
&lt;p&gt;233不开玩笑了 &lt;/p&gt;

    
    </summary>
    
      <category term="one" scheme="http://yoursite.com/categories/one/"/>
    
      <category term="two" scheme="http://yoursite.com/categories/one/two/"/>
    
    
      <category term="PS2" scheme="http://yoursite.com/tags/PS2/"/>
    
      <category term="Games" scheme="http://yoursite.com/tags/Games/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/07/30/hello-world/"/>
    <id>http://yoursite.com/2016/07/30/hello-world/</id>
    <published>2016-07-30T08:10:50.524Z</published>
    <updated>2016-07-30T08:10:50.524Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
